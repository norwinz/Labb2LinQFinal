// <auto-generated />
using Labb2LinQFinal;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Labb2LinQFinal.Migrations
{
    [DbContext(typeof(Labb2LinQFinalContex))]
    partial class Labb2LinQFinalContexModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Labb2LinQFinal.Kurs", b =>
                {
                    b.Property<int>("KursId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KursNamn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KursId");

                    b.ToTable("Kurs");
                });

            modelBuilder.Entity("Labb2LinQFinal.Lärare", b =>
                {
                    b.Property<int>("LärareId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LärareNamn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LärareId");

                    b.ToTable("Lärare");
                });

            modelBuilder.Entity("Labb2LinQFinal.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KursId")
                        .HasColumnType("int");

                    b.Property<int>("LärareId")
                        .HasColumnType("int");

                    b.Property<string>("StudentNamn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.HasIndex("KursId");

                    b.HasIndex("LärareId");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("Labb2LinQFinal.Ämne", b =>
                {
                    b.Property<int>("ÄmneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LärareId")
                        .HasColumnType("int");

                    b.Property<string>("ÄmneNamn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ÄmneId");

                    b.HasIndex("LärareId");

                    b.ToTable("Ämne");
                });

            modelBuilder.Entity("Labb2LinQFinal.Student", b =>
                {
                    b.HasOne("Labb2LinQFinal.Kurs", "Kurs")
                        .WithMany()
                        .HasForeignKey("KursId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Labb2LinQFinal.Lärare", "Lärare")
                        .WithMany()
                        .HasForeignKey("LärareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Labb2LinQFinal.Ämne", b =>
                {
                    b.HasOne("Labb2LinQFinal.Lärare", "Lärare")
                        .WithMany()
                        .HasForeignKey("LärareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
